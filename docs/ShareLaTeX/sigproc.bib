@ARTICLE{item01,
	AUTHOR = "S.V. Zwezdin",
	TITLE = "Problems of measuring program code quality",
	JOURNAL = "SUSU Vestnik",
	VOLUME = {2},
	PAGES = {62-66},
	YEAR = {2010}	}
	
@inproceedings{item02,
 author = {Irigoyen Ferreiro Ferreira, Analia and Santos, Gleison and Cerqueira, Roberta and Montoni, Mariano and Barreto, Ahilton and Soares Barreto, Andrea O. and Rocha, Ana Regina},
 title = {Applying ISO 9001: 2000, MPS.BR and CMMI to Achieve Software Process Maturity: BL Informatica's Pathway},
 booktitle = {Proceedings of the 29th International Conference on Software Engineering},
 series = {ICSE '07},
 year = {2007},
 isbn = {0-7695-2828-7},
 pages = {642--651},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICSE.2007.15},
 doi = {10.1109/ICSE.2007.15},
 acmid = {1248894},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@BOOK{item03,
	AUTHOR = "G.I. Kaigorodtsev",
	TITLE = "Introduction to measurement theory and metrology of programs",
	PUBLISHER = "NGTU Publishing",
	ADDRESS = "Novosibirsk",
	YEAR = "2011"	}
	
@ARTICLE{item04,
	AUTHOR = "E.B. Fernandez, M.M. Larrondo-Petrie, T. Sorgente, M. VanHilst",
	TITLE = "A methodology to develop secure systems using patterns",
	BOOK = "Integrating Security and Software Engineering: Advances and Future Vision",
	PUBLISHER = "IGI Global Group",
	ADDRESS = "Hershey, PA, USA",
	PAGES = {107-126},
	YEAR = {2007}	}
	
@article{item05,
 author = {Louridas, Panagiotis},
 title = {Static Code Analysis},
 journal = {IEEE Softw.},
 issue_date = {July 2006},
 volume = {23},
 number = {4},
 month = jul,
 year = {2006},
 issn = {0740-7459},
 pages = {58--61},
 numpages = {4},
 url = {http://dx.doi.org/10.1109/MS.2006.114},
 doi = {10.1109/MS.2006.114},
 acmid = {1159392},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
 keywords = {debugging, software testing, software testing, static checkers, debugging, static checkers},
} 

@INPROCEEDINGS{item06, 
author={A. Shabtai and Y. Fledel and Y. Elovici}, 
booktitle={2010 International Conference on Computational Intelligence and Security}, 
title={Automated Static Code Analysis for Classifying Android Applications Using Machine Learning}, 
year={2010}, 
volume={}, 
number={}, 
pages={329-333}, 
keywords={Java;XML;file organisation;invasive software;learning (artificial intelligence);mobile computing;mobile handsets;operating systems (computers);pattern classification;program diagnostics;Android application;Java byte-code;ML classification algorithm;XML file;automated static code analysis;file classification;machine learning;malicious application detection;malware file;operating system;smart phone;static feature extraction;Android;Machine Learning;Malware;Mobile Devices;Security;Static analysis}, 
doi={10.1109/CIS.2010.77}, 
ISSN={}, 
month={Dec},}

@INPROCEEDINGS{item07, 
author={N. Antunes and M. Vieira}, 
booktitle={2009 15th IEEE Pacific Rim International Symposium on Dependable Computing}, 
title={Comparing the Effectiveness of Penetration Testing and Static Code Analysis on the Detection of SQL Injection Vulnerabilities in Web Services}, 
year={2009}, 
volume={}, 
number={}, 
pages={301-306}, 
keywords={SQL;Web services;security of data;user interfaces;SQL injection vulnerability detection;Web services;business-critical components;penetration testing;penetration testing tools;static code analysis;Application software;Automatic testing;Data security;Network servers;Performance analysis;Performance evaluation;Relational databases;Simple object access protocol;Web server;Web services;Penetration Testing;SQL Injection;Static Code Analysis;Vulnerabilities;Web Services}, 
doi={10.1109/PRDC.2009.54}, 
ISSN={}, 
month={Nov},}

@INPROCEEDINGS{item08, 
author={D. Baca and K. Petersen and B. Carlsson and L. Lundberg}, 
booktitle={2009 International Conference on Availability, Reliability and Security}, 
title={Static Code Analysis to Detect Software Security Vulnerabilities - Does Experience Matter?}, 
year={2009}, 
volume={}, 
number={}, 
pages={804-810}, 
keywords={program diagnostics;security of data;software maintenance;legacy code;software security;static code analysis;vulnerability detection;Availability;Computer languages;Detectors;Fault detection;Fault diagnosis;Reliability engineering;Security;Software systems;coverity;experience;industry experiment;prevent;security;software security;static analysis;static code analysis;vulnerabilities}, 
doi={10.1109/ARES.2009.163}, 
ISSN={}, 
month={March},}

@article{item09,
 author = {Zitser, Misha and Lippmann, Richard and Leek, Tim},
 title = {Testing Static Analysis Tools Using Exploitable Buffer Overflows from Open Source Code},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {November 2004},
 volume = {29},
 number = {6},
 month = oct,
 year = {2004},
 issn = {0163-5948},
 pages = {97--106},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1041685.1029911},
 doi = {10.1145/1041685.1029911},
 acmid = {1029911},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {buffer overflow, evaluation, exploit, false alarm, security, source code, static analysis, test detection},
} 

@ARTICLE{item10, 
author={T. Menzies and J. Greenwald and A. Frank}, 
journal={IEEE Transactions on Software Engineering}, 
title={Data Mining Static Code Attributes to Learn Defect Predictors}, 
year={2007}, 
volume={33}, 
number={1}, 
pages={2-13}, 
keywords={data mining;learning (artificial intelligence);program diagnostics;program testing;software quality;McCabes versus Halstead;data mining;defect predictor learning;lines of code counts;resource-bound exploration;static code attributes;Art;Artificial intelligence;Bayesian methods;Data mining;Financial management;Learning systems;Software quality;Software systems;Software testing;System testing;Data mining detect prediction;Halstead;McCabe;artifical intelligence;empirical;naive Bayes.}, 
doi={10.1109/TSE.2007.256941}, 
ISSN={0098-5589}, 
month={Jan},}

@INPROCEEDINGS{item11, 
author={A. Moser and C. Kruegel and E. Kirda}, 
booktitle={Twenty-Third Annual Computer Security Applications Conference (ACSAC 2007)}, 
title={Limits of Static Analysis for Malware Detection}, 
year={2007}, 
volume={}, 
number={}, 
pages={421-430}, 
keywords={invasive software;program diagnostics;program verification;theorem proving;code transformation;computer systems security;malicious code;malware detection;model checking;obfuscation transformation;pattern matching;program control flow;semantic signatures;spyware scanner;static analysis;theorem proving;virus detection;Application software;Computer security;Databases;Detectors;Face detection;Internet;Pattern matching;Performance analysis;Power system modeling;Registers}, 
doi={10.1109/ACSAC.2007.21}, 
ISSN={1063-9527}, 
month={Dec},}

@BOOK{item12,
	AUTHOR = "S.K. Chernonozhkin",
	TITLE = "Methods and tools of metric support for the development of quality programs",
	PUBLISHER = "NGTU Publishing",
	ADDRESS = "Novosibirsk",
	YEAR = "1997"	}

@article{item13,
	AUTHOR = "Coala",
    title ={Coala - Linting and fixing code for all languages},
    url ={http://coala.io},
    lastaccessed ={November 3, 2017},
}

@article{item14,
	AUTHOR = "Pylama",
    title ={Pylama - code audit tool for Python and JavaScript},
    url ={https://pylama.readthedocs.io},
    lastaccessed ={November 3, 2017},
}

@article{item15,
	AUTHOR = "Flake8",
    title ={Flake8 - your tool for style guide enforcement},
    url ={http://flake8.pycqa.org},
    lastaccessed ={November 3, 2017},
}

@article{item16,
	AUTHOR = "GitHub",
    title = {GitHub: Social coding},
    url = {https://github.com},
    lastaccessed ={November 3, 2017},
}

@INPROCEEDINGS{item17,
	AUTHOR = "K.V. Nefedyeva",
	TITLE = "Infographics and data visualization in
  analytics",
	BOOKTITLE = "Proceedings of Saint-Petersburg State University of Culture and Arts",
	VOLUME = {2},
	PAGES = {89-93},
	YEAR = {2013}	}

@BOOK{item18,
	AUTHOR = "Michele Lanza and Radu Marinescu",
	TITLE = "Object-oriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems",
	PUBLISHER = "Springer",
	ADDRESS = "Berlin, Heidelberg",
	YEAR = "2006",	
	doi={10.1007/3-540-39538-5}, }

@ARTICLE{item19, 
author={M. Lanza and S. Ducasse}, 
journal={IEEE Transactions on Software Engineering}, 
title={Polymetric views - a lightweight visual approach to reverse engineering}, 
year={2003}, 
volume={29}, 
number={9}, 
pages={782-795}, 
keywords={bibliographies;object-oriented programming;program visualisation;reverse engineering;software metrics;CodeCrawler;large software system;lightweight software visualization technique;object-oriented programming;polymetric view;reverse engineering;software engineer;software industry;software metrics information;software visualization;Computer industry;Costs;Humans;Investments;Maintenance engineering;Reverse engineering;Software metrics;Software systems;Systems engineering and theory;Visualization}, 
doi={10.1109/TSE.2003.1232284}, 
ISSN={0098-5589}, 
month={Sept},}

@INPROCEEDINGS{item20,
	AUTHOR = "Lanza Michele and Stéphane Ducasse",
	TITLE = "Understanding software evolution using a combination of software visualization and software metrics",
	BOOKTITLE = "Proceedings of LMO 2002 (Langages et Modèles à Objets",
	PAGES = "135-149",
	YEAR = {2002}	}










